Description: >
    Santiago Canosa / Udacity 2019
    Servers

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    DiskVolume:
        Description: The disk's volume expressed in GB
        Type: String
        Default: '10'

    InstanceType:
        Description: EC2 Instance Type
        Type: String
        Default: 't3.small'
    
    AutoScallingGroupMinSize:
      Description: Auto scalling group min instances
      Type: String
      Default: '2'

    AutoScallingGroupMaxSize:
      Description: Auto scalling group max instances
      Type: String
      Default: '2'

    S3ZipResourceUrl:
      Description: Provide s3 url to find the zip resource. The url must match the pattern s3://<<bucket-name>>/<<resource>>.zip
      Type: String
      Default: '2'

    S3ReadOnlyRole:
      Description: Provide a role from your aws account that grants s3 read permissions.
      Type: String

Resources:

  AutoScalingProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref S3ReadOnlyRole

  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update
          apt install curl
          apt install unzip
          apt-get update -y
          apt-get install apache2 -y

          # install aws cli
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install

          # start apache server and download resources from s3
          systemctl start apache2.service
          aws s3 cp ${S3ZipResourceUrl} .
          unzip -o udagram.zip -d /var/www/html

      ImageId: ami-003634241a8fcdec0
      IamInstanceProfile: !Ref AutoScalingProfile
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: !Ref DiskVolume

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: !Ref AutoScallingGroupMinSize
      MaxSize: !Ref AutoScallingGroupMaxSize
      TargetGroupARNs:
      - Ref: WebAppTargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs: 

    HttpDNSName:
      Description: Url joining http and load balancer dns name  
      Value: 
        Fn::Join: [ "", [ "http://", !GetAtt WebAppLB.DNSName ] ]
      Export:
        Name: !Sub ${EnvironmentName}-HTTP-DNS-NAME
  

